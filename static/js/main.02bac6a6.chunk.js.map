{"version":3,"sources":["logo.svg","redux/Counter/selectors.js","redux/Counter/constants.js","redux/Counter/actions.js","components/EditableCounter/index.jsx","components/EditableCounter/EditableCounter.jsx","components/Counter/Counter.jsx","components/Counter/index.jsx","components/CounterList/CounterList.jsx","components/CounterList/index.jsx","components/CounterDashboard/CounterDashboard.jsx","components/CounterDashboard/index.jsx","redux/Counter/reducer.js","redux/rootReducer.js","App.js","redux/createStore.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","countersSelector","state","counterReducer","counters","counterIDsSelector","counterIDs","ADD","add","counterValues","type","payload","remove","counterID","increase","value","arguments","length","undefined","decrease","update","EditableCounter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","_this$state","text","_this$props","id","onAdd","onEdit","parseInt","changeInput","e","_e$target","target","name","setState","defineProperty","_this$props2","_this$props3","cancelFallback","_this$state2","isNew","react_default","a","createElement","className","data-testid","onChange","onClick","classNames","button-add","button-update","React","Component","Counter","onDecrease","onIncrease","delete","onDelete","values","onUpdate","toggleEditing","prevState","isEditing","_this$props4","components_EditableCounter","PureComponent","connect","dispatch","bindActionCreators","CounterList","_props$counterIDs","map","counter","components_Counter","assign","key","CounterDashboard","toogleEditableForm","isAdding","handleAddCounter","components_CounterList","reducer","action","_action$payload","indexOf","selectedCounter","objectSpread","newCounterID","uniqueId","concat","toConsumableArray","newCounterIDs","filter","newCounters","reduce","prevCounters","rootReducer","combineReducers","store","preloadedState","createStore","App","src","logo","alt","href","rel","components_CounterDashboard","WrappedApp","es","App_App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02bac6a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const countersSelector = (state) => state.counterReducer.counters;\nexport const counterIDsSelector = (state) => state.counterReducer.counterIDs;","export const INCREASE = 'app/COUNTER/INCREASE';\r\nexport const DECREASE = 'app/COUNTER/DECREASE';\r\nexport const UPDATE = 'app/COUNTER/UPDATE';\r\nexport const ADD = 'app/COUNTER/ADD';\r\nexport const REMOVE = 'app/COUNTER/REMOVE';\r\nexport const COUNTER_PREFIX = 'COUNTER_'","import {\r\n  ADD,\r\n  DECREASE,\r\n  INCREASE,\r\n  REMOVE,\r\n  UPDATE\r\n} from './constants';\r\n\r\nexport const add = counterValues => ({\r\n  type: ADD,\r\n  payload: {\r\n    counterValues\r\n  }\r\n});\r\n\r\nexport const remove = counterID => ({\r\n  type: REMOVE,\r\n  payload: {\r\n    counterID\r\n  }\r\n});\r\n\r\nexport const increase = (counterID, value = 1) => ({\r\n  type: INCREASE,\r\n  payload: {\r\n    counterID,\r\n    value\r\n  }\r\n});\r\nexport const decrease = (counterID, value = 1) => ({\r\n  type: DECREASE,\r\n  payload: {\r\n    counterID,\r\n    value\r\n  }\r\n});\r\n\r\nexport const update = (counterID, counterValues) => ({\r\n  type: UPDATE,\r\n  payload: {\r\n    counterID,\r\n    counterValues\r\n  }\r\n});","import EditableCounter from './EditableCounter';\r\nexport default EditableCounter;\r\n","import './EditableCounter.scss';\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nclass EditableCounter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { text, value } = this.props;\r\n    this.state = {\r\n      text: text || '',\r\n      value: value || 0\r\n    };\r\n  }\r\n  submit = () => {\r\n    const { text, value } = this.state;\r\n    const { id, onAdd, onEdit } = this.props;\r\n    if (!text) return;\r\n    const counterValues = {\r\n      text,\r\n      value: parseInt(value)\r\n    };\r\n    if (!!id) {\r\n      onEdit(id, counterValues);\r\n    } else {\r\n      onAdd(counterValues);\r\n    }\r\n  };\r\n\r\n  changeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, cancelFallback } = this.props;\r\n    const { text, value } = this.state;\r\n    const isNew = !!!id;\r\n    return (\r\n      <div className=\"counter counter-editable\" data-testid=\"counter-editable\">\r\n        <div className=\"form-group\">\r\n          <label>Title</label>\r\n          <input\r\n            name=\"text\"\r\n            id=\"counterText\"\r\n            value={text}\r\n            onChange={this.changeInput}\r\n            data-testid=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Value</label>\r\n          <input\r\n            name=\"value\"\r\n            type=\"number\"\r\n            value={value}\r\n            onChange={this.changeInput}\r\n            data-testid=\"value\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={this.submit}\r\n            className={classNames('button', {\r\n              'button-add': isNew,\r\n              'button-update': !isNew\r\n            })}\r\n          >\r\n            {isNew ? 'Add' : 'Save'}\r\n          </button>\r\n          <button\r\n            className=\"button button-cancel\"\r\n            onClick={cancelFallback}\r\n            data-testid=\"button-cancel\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableCounter;\r\n","import './Counter.scss';\r\n\r\nimport React, { PureComponent } from 'react';\r\n\r\nimport EditableCounter from '../EditableCounter';\r\n\r\nclass Counter extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false\r\n    };\r\n  }\r\n\r\n  decrease = () => {\r\n    const { id, onDecrease } = this.props;\r\n    onDecrease(id);\r\n  };\r\n  increase = () => {\r\n    const { id, onIncrease } = this.props;\r\n    onIncrease(id);\r\n  };\r\n  delete = () => {\r\n    const { id, onDelete } = this.props;\r\n    onDelete(id);\r\n  };\r\n  update = (id, values) => {\r\n    const { onUpdate } = this.props;\r\n    onUpdate(id, values);\r\n    this.toggleEditing();\r\n  };\r\n  toggleEditing = () => {\r\n    this.setState((prevState) => ({\r\n      isEditing: !prevState.isEditing\r\n    }));\r\n  };\r\n  render() {\r\n    const { isEditing } = this.state;\r\n    const { id, text, value } = this.props;\r\n    if (isEditing) {\r\n      return (\r\n        <EditableCounter\r\n          id={id}\r\n          text={text}\r\n          value={value}\r\n          onEdit={this.update}\r\n          cancelFallback={this.toggleEditing}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"counter\" data-testid=\"counter\">\r\n        <div className=\"button-group button-group--right\">\r\n          <button\r\n            onClick={this.toggleEditing}\r\n            className=\"button button-edit\"\r\n            data-testid=\"button-edit\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={this.delete}\r\n            className=\"button button-delete\"\r\n            data-testid=\"button-delete\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n        <h1 className=\"title\" data-testid=\"text\">\r\n          {text}\r\n        </h1>\r\n        <div className=\"control\">\r\n          <button\r\n            onClick={this.decrease}\r\n            className=\"button button-decrease\"\r\n            data-testid=\"button-decrease\"\r\n          >\r\n            -\r\n          </button>\r\n          <div className=\"value\">\r\n            <span data-testid=\"value\">{value}</span>\r\n          </div>\r\n          <button\r\n            onClick={this.increase}\r\n            className=\"button button-increase\"\r\n            data-testid=\"button-increase\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import {\r\n  decrease,\r\n  increase,\r\n  remove,\r\n  update\r\n} from \"../../redux/Counter/actions\";\r\n\r\nimport Counter from \"./Counter\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      onIncrease: increase,\r\n      onDecrease: decrease,\r\n      onUpdate: update,\r\n      onDelete: remove\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Counter);\r\n","import Counter from '../Counter';\r\nimport React from 'react';\r\n\r\nconst CounterList = props => {\r\n  const { counterIDs = [], counters } = props;\r\n  return counterIDs.map(counterID => {\r\n    const counter = counters[counterID];\r\n    return <Counter key={counterID} id={counterID} {...counter} />;\r\n  });\r\n};\r\n\r\nexport default CounterList;\r\n","import {\r\n  counterIDsSelector,\r\n  countersSelector\r\n} from \"../../redux/Counter/selectors\";\r\n\r\nimport CounterList from \"./CounterList\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n  counters: countersSelector(state),\r\n  counterIDs: counterIDsSelector(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CounterList);\r\n","import \"./CounterDashboard.scss\";\r\n\r\nimport CounterList from \"../CounterList\";\r\nimport EditableCounter from \"../EditableCounter\";\r\nimport React from \"react\";\r\n\r\nclass CounterDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdding: false\r\n    };\r\n  }\r\n  toogleEditableForm = () => {\r\n    this.setState(prevState => ({ isAdding: !prevState.isAdding }));\r\n  };\r\n  handleAddCounter = counterValues => {\r\n    const { onAdd } = this.props;\r\n    this.setState({\r\n      isAdding: false\r\n    });\r\n    onAdd(counterValues);\r\n  };\r\n\r\n  render() {\r\n    const { isAdding } = this.state;\r\n\r\n    return (\r\n      <div className=\"counterPanel\">\r\n        <CounterList />\r\n        {!isAdding && (\r\n          <button\r\n            onClick={this.toogleEditableForm}\r\n            className=\"button button-add\"\r\n          >\r\n            Add new\r\n          </button>\r\n        )}\r\n        {isAdding && (\r\n          <EditableCounter\r\n            onAdd={this.handleAddCounter}\r\n            cancelFallback={this.toogleEditableForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterDashboard;\r\n","import CounterDashboard from \"./CounterDashboard\";\r\nimport { add } from \"../../redux/Counter/actions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      onAdd: add\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CounterDashboard);\r\n","import {\r\n  ADD,\r\n  COUNTER_PREFIX,\r\n  DECREASE,\r\n  INCREASE,\r\n  REMOVE,\r\n  UPDATE\r\n} from './constants';\r\n\r\nimport uniqueId from 'lodash/uniqueId';\r\n\r\n/*\r\ncounters: {\r\n    <Counter ID>: {\r\n      text: 'Counter text',\r\n      value: 0,\r\n    }\r\n  },\r\n  counterIDs: ['<Counter ID>', ...]\r\n*/\r\nconst createInitalState = () => ({\r\n  counters: {},\r\n  counterIDs: []\r\n});\r\n\r\nconst reducer = (state = createInitalState(), action) => {\r\n  const {\r\n    type,\r\n    payload = {}\r\n  } = action;\r\n  const {\r\n    counters,\r\n    counterIDs\r\n  } = state;\r\n  switch (type) {\r\n    case INCREASE: {\r\n      const {\r\n        value,\r\n        counterID\r\n      } = payload;\r\n      if (counterIDs.indexOf(counterID) === -1) {\r\n        return state;\r\n      }\r\n      const selectedCounter = counters[counterID];\r\n      return {\r\n        ...state,\r\n        counters: {\r\n          ...counters,\r\n          [counterID]: {\r\n            ...selectedCounter,\r\n            value: selectedCounter.value + value\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case DECREASE: {\r\n      const {\r\n        value,\r\n        counterID\r\n      } = payload;\r\n      if (counterIDs.indexOf(counterID) === -1) {\r\n        return state;\r\n      }\r\n      const selectedCounter = counters[counterID];\r\n\r\n      return {\r\n        ...state,\r\n        counters: {\r\n          ...counters,\r\n          [counterID]: {\r\n            ...selectedCounter,\r\n            value: selectedCounter.value - value\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case UPDATE: {\r\n      const {\r\n        counterID,\r\n        counterValues\r\n      } = payload;\r\n      if (counterIDs.indexOf(counterID) === -1) {\r\n        return state;\r\n      }\r\n      const selectedCounter = counters[counterID];\r\n      return {\r\n        ...state,\r\n        counters: {\r\n          ...counters,\r\n          [counterID]: {\r\n            ...selectedCounter,\r\n            ...counterValues\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case ADD: {\r\n      const {\r\n        counterValues\r\n      } = payload;\r\n      const newCounterID = uniqueId(COUNTER_PREFIX);\r\n      return {\r\n        ...state,\r\n        counterIDs: [...counterIDs, newCounterID],\r\n        counters: {\r\n          ...counters,\r\n          [newCounterID]: {\r\n            ...counterValues\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case REMOVE: {\r\n      const {\r\n        counterID\r\n      } = payload;\r\n      if (counterIDs.indexOf(counterID) === -1) {\r\n        return state;\r\n      }\r\n      const newCounterIDs = counterIDs.filter(id => id !== counterID);\r\n      const newCounters = newCounterIDs.reduce((prevCounters, id) =>\r\n        Object.assign(prevCounters, {\r\n          [id]: counters[id]\r\n        }), {}\r\n      );\r\n      return {\r\n        ...state,\r\n        counters: newCounters,\r\n        counterIDs: newCounterIDs\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {\n  combineReducers\n} from 'redux';\nimport counterReducer from './Counter/reducer';\nconst rootReducer = combineReducers({\n  counterReducer\n})\n\nexport default rootReducer;","import \"./App.css\";\r\n\r\nimport CounterPanel from \"./components/CounterDashboard\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport createStore from \"./redux/createStore\";\r\nimport logo from \"./logo.svg\";\r\n\r\nconst store = createStore();\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Simple <code>Counter</code> demo and unit tests\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://github.com/phatnguyenuit/redux-counter-example\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Checkout source code\r\n        </a>\r\n      </header>\r\n      <CounterPanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedApp = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\nexport default WrappedApp;\r\n","import {\n  createStore\n} from 'redux';\nimport rootReducer from './rootReducer'\n\nexport default (preloadedState = {}) => createStore(rootReducer, preloadedState);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}