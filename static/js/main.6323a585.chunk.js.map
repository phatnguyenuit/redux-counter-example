{"version":3,"sources":["logo.svg","redux/Counter/constants.js","redux/Counter/actions.js","redux/Counter/selectors.js","components/EditableCounter/index.jsx","components/EditableCounter/EditableCounter.jsx","components/Counter/Counter.jsx","components/Counter/index.jsx","components/CounterList/CounterList.jsx","components/CounterList/index.jsx","components/CounterPanel/CounterPanel.jsx","components/CounterPanel/index.jsx","redux/Counter/reducer.js","redux/rootReducer.js","App.js","redux/createStore.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ADD","add","counterValues","type","payload","remove","counterID","increase","value","arguments","length","undefined","decrease","update","values","counterSelector","state","props","counterReducer","counters","id","countersSelector","counterIDsSelector","counterIDs","EditableCounter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","_this$state","text","_this$props","onAdd","onEdit","parseInt","changeInput","e","_e$target","target","name","setState","defineProperty","_this$props2","_this$props3","cancelFallback","_this$state2","isNew","react_default","a","createElement","className","onChange","onClick","classNames","button-add","button-update","React","Component","Counter","onDecrease","onIncrease","delete","onDelete","onUpdate","toggleEditing","prevState","isEditing","_this$props4","components_EditableCounter","connect","getCounterValueSelector","createSelector","counter","getCounterTextSelector","dispatch","bindActionCreators","CounterList","_props$counterIDs","map","components_Counter","assign","key","CounterPanel","toogleEditableForm","isAdding","handleAddCounter","components_CounterList","reducer","action","_action$payload","selectedCounter","objectSpread","newCounterID","uniqueId","concat","toConsumableArray","newCounterIDs","filter","newCounters","reduce","prevCounters","rootReducer","combineReducers","store","preloadedState","createStore","App","src","logo","alt","href","rel","components_CounterPanel","WrappedApp","react_redux_es","App_App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6323a585.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const INCREASE = 'app/COUNTER/INCREASE';\r\nexport const DECREASE = 'app/COUNTER/DECREASE';\r\nexport const UPDATE = 'app/COUNTER/UPDATE';\r\nexport const ADD = 'app/COUNTER/ADD';\r\nexport const REMOVE = 'app/COUNTER/REMOVE';\r\nexport const COUNTER_PREFIX = 'COUNTER_'","import {\r\n  ADD,\r\n  DECREASE,\r\n  INCREASE,\r\n  REMOVE,\r\n  UPDATE\r\n} from './constants';\r\n\r\nexport const add = counterValues => ({\r\n  type: ADD,\r\n  payload: {\r\n    counterValues\r\n  }\r\n});\r\n\r\nexport const remove = counterID => ({\r\n  type: REMOVE,\r\n  payload: {\r\n    counterID\r\n  }\r\n});\r\n\r\nexport const increase = (counterID, value = 1) => ({\r\n  type: INCREASE,\r\n  payload: {\r\n    counterID,\r\n    value\r\n  }\r\n});\r\nexport const decrease = (counterID, value = 1) => ({\r\n  type: DECREASE,\r\n  payload: {\r\n    counterID,\r\n    value\r\n  }\r\n});\r\n\r\nexport const update = (counterID, values) => ({\r\n  type: UPDATE,\r\n  payload: {\r\n    counterID,\r\n    values\r\n  }\r\n});","import {\n  createSelector\n} from 'reselect'\n\nconst counterSelector = (state, props) => state.counterReducer.counters[props.id];\nexport const countersSelector = (state) => state.counterReducer.counters;\nexport const counterIDsSelector = (state) => state.counterReducer.counterIDs;\n\nexport const makeGetCounterValueSelector = () => createSelector(\n  counterSelector,\n  counter => counter.value\n)\nexport const makeGetCounterTextSelector = () => createSelector(\n  counterSelector,\n  counter => counter.text\n)","import EditableCounter from './EditableCounter';\r\nexport default EditableCounter;\r\n","import \"./EditableCounter.scss\";\r\n\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nclass EditableCounter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { text, value } = this.props;\r\n    this.state = {\r\n      text: text || \"\",\r\n      value: value || 0\r\n    };\r\n  }\r\n  submit = () => {\r\n    const { text, value } = this.state;\r\n    const { id, onAdd, onEdit } = this.props;\r\n    if (!text) return;\r\n    if (!!id) {\r\n      onEdit(id, { text, value });\r\n    } else {\r\n      onAdd({ text, value: parseInt(value) });\r\n    }\r\n  };\r\n\r\n  changeInput = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, cancelFallback } = this.props;\r\n    const { text, value } = this.state;\r\n    const isNew = !!!id;\r\n    return (\r\n      <div className=\"counter counter-editable\">\r\n        <div className=\"form-group\">\r\n          <label>Title</label>\r\n          <input\r\n            name=\"text\"\r\n            id=\"counterText\"\r\n            value={text}\r\n            onChange={this.changeInput}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Value</label>\r\n          <input\r\n            name=\"value\"\r\n            type=\"number\"\r\n            value={value}\r\n            onChange={this.changeInput}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={this.submit}\r\n            className={classNames(\"button\", {\r\n              \"button-add\": isNew,\r\n              \"button-update\": !isNew\r\n            })}\r\n          >\r\n            {isNew ? \"Add\" : \"Save\"}\r\n          </button>\r\n          <button className=\"button button-cancel\" onClick={cancelFallback}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableCounter;\r\n","import \"./Counter.scss\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport EditableCounter from \"../EditableCounter\";\r\n\r\nclass Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false\r\n    };\r\n  }\r\n  decrease = () => {\r\n    const { id, onDecrease } = this.props;\r\n    onDecrease(id);\r\n  };\r\n  increase = () => {\r\n    const { id, onIncrease } = this.props;\r\n    onIncrease(id);\r\n  };\r\n  delete = () => {\r\n    const { id, onDelete } = this.props;\r\n    onDelete(id);\r\n  };\r\n  update = () => values => {\r\n    const { onUpdate } = this.props;\r\n    onUpdate(values);\r\n  };\r\n  toggleEditing = () => {\r\n    this.setState(prevState => ({\r\n      isEditing: !prevState.isEditing\r\n    }));\r\n  };\r\n  render() {\r\n    const { isEditing } = this.state;\r\n    const { id, text, value } = this.props;\r\n    if (isEditing) {\r\n      return (\r\n        <EditableCounter\r\n          id={id}\r\n          text={text}\r\n          value={value}\r\n          onEdit={this.update}\r\n          cancelFallback={this.toggleEditing}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"counter\">\r\n        <div className=\"button-group button-group--right\">\r\n          <button onClick={this.toggleEditing} className=\"button button-edit\">\r\n            Edit\r\n          </button>\r\n          <button onClick={this.delete} className=\"button button-delete\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n        <h1 className=\"title\">{text}</h1>\r\n        <div className=\"control\">\r\n          <button onClick={this.decrease} className=\"button button-decrease\">\r\n            -\r\n          </button>\r\n          <div className=\"value\">\r\n            <span>{value}</span>\r\n          </div>\r\n          <button onClick={this.increase} className=\"button button-increase\">\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import {\r\n  decrease,\r\n  increase,\r\n  remove,\r\n  update\r\n} from \"../../redux/Counter/actions\";\r\nimport {\r\n  makeGetCounterTextSelector,\r\n  makeGetCounterValueSelector\r\n} from \"../../redux/Counter/selectors\";\r\n\r\nimport Counter from \"./Counter\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst makeMapStateToProps = () => {\r\n  const getCounterValueSelector = makeGetCounterValueSelector();\r\n  const getCounterTextSelector = makeGetCounterTextSelector();\r\n  return (state, props) => ({\r\n    value: getCounterValueSelector(state, props),\r\n    text: getCounterTextSelector(state, props)\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      onIncrease: increase,\r\n      onDecrease: decrease,\r\n      onUpdate: update,\r\n      onDelete: remove\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  makeMapStateToProps,\r\n  mapDispatchToProps\r\n)(Counter);\r\n","import Counter from '../Counter';\r\nimport React from 'react';\r\n\r\nconst CounterList = props => {\r\n  const { counterIDs = [], counters } = props;\r\n  return counterIDs.map(counterID => {\r\n    const counter = counters[counterID];\r\n    return <Counter key={counterID} id={counterID} {...counter} />;\r\n  });\r\n};\r\n\r\nexport default CounterList;\r\n","import { addCounter, removeCounter } from '../../redux/Counter/actions';\r\nimport {\r\n  counterIDsSelector,\r\n  countersSelector\r\n} from '../../redux/Counter/selectors';\r\n\r\nimport CounterList from './CounterList';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({\r\n  counters: countersSelector(state),\r\n  counterIDs: counterIDsSelector(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CounterList);\r\n","import \"./CounterPanel.scss\";\r\n\r\nimport CounterList from \"../CounterList\";\r\nimport EditableCounter from \"../EditableCounter\";\r\nimport React from \"react\";\r\n\r\nclass CounterPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdding: false\r\n    };\r\n  }\r\n  toogleEditableForm = () => {\r\n    this.setState(prevState => ({ isAdding: !prevState.isAdding }));\r\n  };\r\n  handleAddCounter = counterValues => {\r\n    const { onAdd } = this.props;\r\n    this.setState({\r\n      isAdding: false\r\n    });\r\n    onAdd(counterValues);\r\n  };\r\n\r\n  render() {\r\n    const { isAdding } = this.state;\r\n    return (\r\n      <div className=\"counterPanel\">\r\n        <CounterList />\r\n        {!isAdding && (\r\n          <button\r\n            onClick={this.toogleEditableForm}\r\n            className=\"button button-add\"\r\n          >\r\n            Add new\r\n          </button>\r\n        )}\r\n        {isAdding && (\r\n          <EditableCounter\r\n            onAdd={this.handleAddCounter}\r\n            cancelFallback={this.toogleEditableForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterPanel;\r\n","import CounterPanel from \"./CounterPanel\";\r\nimport { add } from \"../../redux/Counter/actions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = null;\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      onAdd: add\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CounterPanel);\r\n","import {\r\n  ADD,\r\n  COUNTER_PREFIX,\r\n  DECREASE,\r\n  INCREASE,\r\n  REMOVE\r\n} from './constants';\r\n\r\nimport uniqueId from 'lodash/uniqueId';\r\n\r\n/*\r\ncounters: {\r\n    1: {\r\n      text: 'Hello',\r\n      value: 0,\r\n    }\r\n  },\r\n  counterIDs: [1]\r\n*/\r\nconst createInitalState = () => ({\r\n  counters: {},\r\n  counterIDs: []\r\n});\r\n\r\nconst reducer = (state = createInitalState(), action) => {\r\n  const {\r\n    type,\r\n    payload = {}\r\n  } = action;\r\n  const {\r\n    counters,\r\n    counterIDs\r\n  } = state;\r\n  switch (type) {\r\n    case INCREASE: {\r\n      const {\r\n        value,\r\n        counterID\r\n      } = payload;\r\n      const selectedCounter = counters[counterID];\r\n      return {\r\n        ...state,\r\n        counters: {\r\n          ...counters,\r\n          [counterID]: {\r\n            ...selectedCounter,\r\n            value: selectedCounter.value + value\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case DECREASE: {\r\n      const {\r\n        value,\r\n        counterID\r\n      } = payload;\r\n      const selectedCounter = counters[counterID];\r\n      return {\r\n        ...state,\r\n        counters: {\r\n          ...counters,\r\n          [counterID]: {\r\n            ...selectedCounter,\r\n            value: selectedCounter.value - value\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case ADD: {\r\n      const {\r\n        counterValues\r\n      } = payload;\r\n      const newCounterID = uniqueId(COUNTER_PREFIX);\r\n      return {\r\n        ...state,\r\n        counterIDs: [...counterIDs, newCounterID],\r\n        counters: {\r\n          ...counters,\r\n          [newCounterID]: {\r\n            ...counterValues\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case REMOVE: {\r\n      const {\r\n        counterID\r\n      } = payload;\r\n      const newCounterIDs = counterIDs.filter(id => id !== counterID);\r\n      const newCounters = newCounterIDs.reduce((prevCounters, id) =>\r\n        Object.assign(prevCounters, {\r\n          [id]: counters[id]\r\n        }), {}\r\n      );\r\n      return {\r\n        ...state,\r\n        counters: newCounters,\r\n        counterIDs: newCounterIDs\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {\n  combineReducers\n} from 'redux';\nimport counterReducer from './Counter/reducer';\nconst rootReducer = combineReducers({\n  counterReducer\n})\n\nexport default rootReducer;","import \"./App.css\";\n\nimport CounterPanel from \"./components/CounterPanel\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport createStore from \"./redux/createStore\";\nimport logo from \"./logo.svg\";\n\nconst store = createStore();\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <CounterPanel />\n    </div>\n  );\n};\n\nconst WrappedApp = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nexport default WrappedApp;\n","import {\n  createStore\n} from 'redux';\nimport rootReducer from './rootReducer'\n\nexport default (preloadedState = {}) => createStore(rootReducer, preloadedState);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}