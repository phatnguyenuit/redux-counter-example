{"version":3,"sources":["logo.svg","redux/Counter/constants.js","redux/Counter/actions.js","redux/Counter/selectors.js","components/EditableCounter/index.jsx","components/EditableCounter/EditableCounter.jsx","components/Counter/Counter.jsx","components/Counter/index.jsx","components/CounterList/CounterList.jsx","components/CounterList/index.jsx","components/CounterPanel/CounterPanel.jsx","components/CounterPanel/index.jsx","redux/Counter/reducer.js","redux/rootReducer.js","App.js","redux/createStore.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RESET","add","counterValues","type","payload","remove","counterID","increase","value","arguments","length","undefined","decrease","reset","update","values","counterSelector","state","props","counterReducer","counters","id","countersSelector","counterIDsSelector","counterIDs","EditableCounter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","_this$state","text","_this$props","onAdd","onEdit","parseInt","changeInput","e","_e$target","target","name","setState","defineProperty","_this$props2","_this$props3","cancelFallback","_this$state2","isNew","react_default","a","createElement","className","htmlFor","onChange","onClick","classNames","button-add","button-update","React","Component","Counter","onDecrease","onIncrease","onReset","edit","isEditing","delete","_this$props4","onDelete","onUpdate","_this$props5","components_EditableCounter","connect","getCounterValueSelector","createSelector","counter","getCounterTextSelector","dispatch","bindActionCreators","CounterList","_props$counterIDs","map","components_Counter","assign","key","CounterPanel","toogleEditableForm","prevState","isAdding","handleAddCounter","components_CounterList","reducer","action","_action$payload","selectedCounter","objectSpread","newCounterID","uniqueId","concat","toConsumableArray","newCounterIDs","filter","newCounters","reduce","prevCounters","rootReducer","combineReducers","store","preloadedState","createStore","App","src","logo","alt","href","rel","components_CounterPanel","WrappedApp","react_redux_es","App_App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0ae47d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const INCREASE = 'app/COUNTER/INCREASE';\nexport const DECREASE = 'app/COUNTER/DECREASE';\nexport const RESET = 'app/COUNTER/RESET';\nexport const UPDATE = 'app/COUNTER/UPDATE';\nexport const ADD_COUNTER = 'app/COUNTER/ADD_COUNTER';\nexport const REMOVE_COUNTER = 'app/COUNTER/REMOVE_COUNTER';\n","import {\n  ADD_COUNTER,\n  DECREASE,\n  INCREASE,\n  REMOVE_COUNTER,\n  RESET,\n  UPDATE\n} from './constants';\n\nexport const add = counterValues => ({\n  type: ADD_COUNTER,\n  payload: {\n    counterValues\n  }\n});\n\nexport const remove = counterID => ({\n  type: REMOVE_COUNTER,\n  payload: {\n    counterID\n  }\n});\n\nexport const increase = (counterID, value = 1) => ({\n  type: INCREASE,\n  payload: {\n    counterID,\n    value\n  }\n});\nexport const decrease = (counterID, value = 1) => ({\n  type: DECREASE,\n  payload: {\n    counterID,\n    value\n  }\n});\nexport const reset = counterID => ({\n  type: RESET,\n  payload: {\n    counterID\n  }\n});\n\nexport const update = (counterID, values) => ({\n  type: UPDATE,\n  payload: {\n    counterID,\n    values\n  }\n});\n","import {\n  createSelector\n} from 'reselect'\n\nconst counterSelector = (state, props) => state.counterReducer.counters[props.id];\nexport const countersSelector = (state) => state.counterReducer.counters;\nexport const counterIDsSelector = (state) => state.counterReducer.counterIDs;\n\nexport const makeGetCounterValueSelector = () => createSelector(\n  counterSelector,\n  counter => counter.value\n)\nexport const makeGetCounterTextSelector = () => createSelector(\n  counterSelector,\n  counter => counter.text\n)","import EditableCounter from './EditableCounter';\nexport default EditableCounter;\n","import './EditableCounter.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nclass EditableCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    const { text, value } = this.props;\n    this.state = {\n      text: text || '',\n      value: value || 0\n    };\n  }\n  submit = () => {\n    const { text, value } = this.state;\n    const { id, onAdd, onEdit } = this.props;\n    if (!text) return;\n    if (!!id) {\n      onEdit(id, { text, value });\n    } else {\n      onAdd({ text, value: parseInt(value) });\n    }\n  };\n\n  changeInput = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { id, cancelFallback } = this.props;\n    const { text, value } = this.state;\n    const isNew = !!id;\n    return (\n      <div className='editableCounter'>\n        <div className='title'>\n          <label htmlFor='counterText'>Title</label>\n          <input\n            name='text'\n            id='counterText'\n            className='counterText'\n            value={text}\n            onChange={this.changeInput}\n          />\n        </div>\n        <div className='value'>\n          <label htmlFor='counterValue'>Value</label>\n          <input\n            name='value'\n            id='counterValue'\n            className='counterValue'\n            type='number'\n            value={value}\n            onChange={this.changeInput}\n          />\n        </div>\n        <div>\n          <button\n            onClick={this.submit}\n            className={classNames('button', {\n              'button-add': isNew,\n              'button-update': !isNew\n            })}\n          >\n            {isNew ? 'Add' : 'Save'}\n          </button>\n          <button className='button button-cancel' onClick={cancelFallback}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditableCounter;\n","import './Counter.scss';\n\nimport React, { Component } from 'react';\n\nimport EditableCounter from '../EditableCounter';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    };\n  }\n  decrease = () => {\n    const { id, onDecrease } = this.props;\n    onDecrease(id);\n  };\n  increase = () => {\n    const { id, onIncrease } = this.props;\n    onIncrease(id);\n  };\n  reset = () => {\n    const { id, onReset } = this.props;\n    onReset(id);\n  };\n  edit = () => {\n    this.setState({\n      isEditing: true\n    });\n  };\n  delete = () => {\n    const { id, onDelete } = this.props;\n    onDelete(id);\n  };\n  update = () => values => {\n    const { onUpdate } = this.props;\n    onUpdate(values);\n  };\n  render() {\n    const { isEditing } = this.state;\n    const { text, value } = this.props;\n    if (isEditing) {\n      return <EditableCounter onEdit={this.update} />;\n    }\n    return (\n      <div className='counter'>\n        <h1 className='title'>{text}</h1>\n        <div className='control'>\n          <button onClick={this.decrease} className='button button-decrease'>\n            -\n          </button>\n          <div className='value'>\n            <span>{value}</span>\n          </div>\n          <button onClick={this.increase} className='button button-increase'>\n            +\n          </button>\n        </div>\n        <button onClick={this.reset} className='button button-reset'>\n          Reset\n        </button>\n        <div className='control'>\n          <button onClick={this.edit} className='button button-edit'>\n            Edit\n          </button>\n          <button onClick={this.delete} className='button button-delete'>\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import {\n  decrease,\n  increase,\n  remove,\n  reset,\n  update\n} from '../../redux/Counter/actions';\nimport {\n  makeGetCounterTextSelector,\n  makeGetCounterValueSelector\n} from '../../redux/Counter/selectors';\n\nimport Counter from './Counter';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nconst makeMapStateToProps = () => {\n  const getCounterValueSelector = makeGetCounterValueSelector();\n  const getCounterTextSelector = makeGetCounterTextSelector();\n  return (state, props) => ({\n    value: getCounterValueSelector(state, props),\n    text: getCounterTextSelector(state, props)\n  });\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      onIncrease: increase,\n      onDecrease: decrease,\n      onReset: reset,\n      onUpdate: update,\n      onDelete: remove\n    },\n    dispatch\n  );\n\nexport default connect(\n  makeMapStateToProps,\n  mapDispatchToProps\n)(Counter);\n","import Counter from '../Counter';\nimport React from 'react';\n\nconst CounterList = props => {\n  const { counterIDs = [], counters } = props;\n  return counterIDs.map(counterID => {\n    const counter = counters[counterID];\n    return <Counter key={counterID} id={counterID} {...counter} />;\n  });\n};\n\nexport default CounterList;\n","import { addCounter, removeCounter } from '../../redux/Counter/actions';\nimport {\n  counterIDsSelector,\n  countersSelector\n} from '../../redux/Counter/selectors';\n\nimport CounterList from './CounterList';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  counters: countersSelector(state),\n  counterIDs: counterIDsSelector(state)\n});\n\nexport default connect(mapStateToProps)(CounterList);\n","import './CounterPanel.scss';\n\nimport CounterList from '../CounterList';\nimport EditableCounter from '../EditableCounter';\nimport React from 'react';\n\nclass CounterPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdding: false\n    };\n  }\n  toogleEditableForm = () => {\n    this.setState(prevState => ({ isAdding: !prevState.isAdding }));\n  };\n  handleAddCounter = counterValues => {\n    const { onAdd } = this.props;\n    this.setState({\n      isAdding: false\n    });\n    onAdd(counterValues);\n  };\n\n  render() {\n    const { isAdding } = this.state;\n\n    return (\n      <div className='counterPanel'>\n        {!isAdding && (\n          <button\n            onClick={this.toogleEditableForm}\n            className='button button-add'\n          >\n            Add new\n          </button>\n        )}\n        {isAdding && (\n          <EditableCounter\n            onAdd={this.handleAddCounter}\n            cancelFallback={this.toogleEditableForm}\n          />\n        )}\n        <CounterList />\n      </div>\n    );\n  }\n}\n\nexport default CounterPanel;\n","import CounterPanel from \"./CounterPanel\";\nimport { add } from \"../../redux/Counter/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      onAdd: add\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CounterPanel);\n","import {\n  ADD_COUNTER,\n  DECREASE,\n  INCREASE,\n  REMOVE_COUNTER,\n  RESET\n} from './constants';\n\nimport uniqueId from 'lodash/uniqueId';\n\n/*\ncounters: {\n    1: {\n      text: 'Hello',\n      value: 0,\n    }\n  },\n  counterIDs: [1]\n*/\nconst createInitalState = () => ({\n  counters: {},\n  counterIDs: []\n});\n\nconst reducer = (state = createInitalState(), action) => {\n  const {\n    type,\n    payload = {}\n  } = action;\n  const {\n    counters,\n    counterIDs\n  } = state;\n  switch (type) {\n    case INCREASE: {\n      const {\n        value,\n        counterID\n      } = payload;\n      const selectedCounter = counters[counterID];\n      return {\n        ...state,\n        counters: {\n          ...counters,\n          [counterID]: {\n            ...selectedCounter,\n            value: selectedCounter.value + value\n          }\n        }\n      };\n    }\n    case DECREASE: {\n      const {\n        value,\n        counterID\n      } = payload;\n      const selectedCounter = counters[counterID];\n      return {\n        ...state,\n        counters: {\n          ...counters,\n          [counterID]: {\n            ...selectedCounter,\n            value: selectedCounter.value - value\n          }\n        }\n      };\n    }\n    case RESET: {\n      const {\n        counterID\n      } = payload;\n      const selectedCounter = counters[counterID];\n      return {\n        ...state,\n        counters: {\n          ...counters,\n          [counterID]: {\n            ...selectedCounter,\n            value: 0\n          }\n        }\n      };\n    }\n    case ADD_COUNTER: {\n      const {\n        counterValues\n      } = payload;\n      const newCounterID = uniqueId('COUNTER_');\n      return {\n        ...state,\n        counterIDs: [...counterIDs, newCounterID],\n        counters: {\n          ...counters,\n          [newCounterID]: {\n            ...counterValues\n          }\n        }\n      };\n    }\n    case REMOVE_COUNTER: {\n      const {\n        counterID\n      } = payload;\n      const newCounterIDs = counterIDs.filter(id => id !== counterID);\n      const newCounters = newCounterIDs.reduce((prevCounters, id) =>\n        Object.assign(prevCounters, counters[id])\n      );\n      return {\n        ...state,\n        counters: newCounters,\n        counterIDs: newCounterIDs\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import {\n  combineReducers\n} from 'redux';\nimport counterReducer from './Counter/reducer';\nconst rootReducer = combineReducers({\n  counterReducer\n})\n\nexport default rootReducer;","import \"./App.css\";\n\nimport CounterPanel from \"./components/CounterPanel\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport createStore from \"./redux/createStore\";\nimport logo from \"./logo.svg\";\n\nconst store = createStore();\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <CounterPanel />\n    </div>\n  );\n};\n\nconst WrappedApp = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nexport default WrappedApp;\n","import {\n  createStore\n} from 'redux';\nimport rootReducer from './rootReducer'\n\nexport default (preloadedState = {}) => createStore(rootReducer, preloadedState);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}